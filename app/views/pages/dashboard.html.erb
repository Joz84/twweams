<%= render "shared/selection" %>

<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12 col-md-7">
    <div class="index-dashboard">
      <div class="container-fluid">
          <div class="row">
            <% @users.each_with_index do |user, index| %>
              <% if (index+1)%4 == 0 %>
                </div>
                <div class="row margin-15">
              <% end %>
                <div class="col-xs-12 col-md-4">
                  <%= render partial: "shared/card", locals: { user: user } %>
                </div>
            <% end %>
          </div>
      </div>
    </div>
    </div>
    <div class="col-md-5">
      <div id="map" class="map-dashboard"></div>
    </div>
  </div>
</div>

<!-- CARD DESIGN -->

<div class="user-card">
  <%= link_to root_path do %>
    <div style="background-image: url(<%= asset_path('logo.png')%>);" class="user-card-photo" ></div>
  <% end %>
  <h4> Jean BON </h4>
  <p> Bayonne </p>
  <div class="user-toggle-button"></div>
  <div class="user-content">
    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa ratione doloribus alias error ut quia eveniet, nostrum vel facere amet beatae suscipit dicta, iste expedita, possimus aliquam laudantium blanditiis minima.
  </div>
</div>

<div class="test1 test2 test3"></div>

<div class="user-card">
  <%= link_to root_path do %>
    <div style="background-image: url(<%= asset_path('logo.png')%>);" class="user-card-photo" ></div>
  <% end %>
  <h4> Jean BON </h4>
  <p> Bayonne </p>
  <div class="user-toggle-button"></div>
  <div class="user-content">
    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa ratione doloribus alias error ut quia eveniet, nostrum vel facere amet beatae suscipit dicta, iste expedita, possimus aliquam laudantium blanditiis minima.
  </div>
</div>

<script>
  // 1. Selectors
  const buttons = document.querySelectorAll('div.user-toggle-button');
  const cards = document.querySelectorAll('div.user-card');

  const test = document.querySelector('.test1');


  // 2. Functions
  function toggleActive() {
    const parentDiv = this.parentNode;
    const userContent = parentDiv.querySelector('div.user-content');
    toggleRotate(this);
    toggleHeigth(userContent);
  };

  function clearAddedClasses(div) {
      const classes = [...div.classList];
      const classLeft = classes.splice(0, 1);
      div.classList = classLeft.join('');
      // el.classList.remove("rotate45deg");
      // el.classList.remove("backto0deg");
    };

  function toggleRotate(el) {
    if (el.classList.contains("rotate45deg")) {
      el.classList.add("backto0deg");
      window.setTimeout( () => clearAddedClasses(el), 500);
    } else {
      el.classList.add("rotate45deg")
    };
  };

  function toggleHeigth(el) {
    if (el.classList.contains('unfold')) {
      el.classList.add('backto0px');
      window.setTimeout( () => clearAddedClasses(el) , 500);
    } else {
      el.classList.add('unfold');
    };
  };

  // 3. Event Listeners
  buttons.forEach(button => button.addEventListener('click', toggleActive));
</script>





<% content_for(:after_js) do %>
  <script>
    $(document).ready(function() {
      var handler = Gmaps.build('Google');
      var isDraggable = $(document).width() > 480 ? true : false;
      handler.buildMap({ provider: { scrollwheel: false, zoomcontrol: true,
                          draggable: isDraggable }, internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(8);
        }
      });
    });
  </script>
<% end %>
